CREATE TABLE IF NOT EXISTS categories (
    category_id BIGINT GENERATE BY DEFAULT AS IDENTITY NOT NULL,
    category_name VARCHAR(120) NOT NULL,
    CONSTRAINT pk_category_id PRIMARY KEY category_id
);

CREATE TABLE IF NOT EXISTS users (
    user_id BIGINT GENERATE BY DEFAULT AS IDENTITY NOT NULL,
    user_name VARCHAR(50) NOT NULL,
    user_email VARCHAR(100) NOT NULL,
    CONSTRAINT pk_user_id PRIMARY KEY user_id
);

CREATE TABLE IF NOT EXISTS locations (
    location_id BIGINT GENERATE BY DEFAULT AS IDENTITY NOT NULL,
    lat FLOAT NOT NULL,
    LON FLOAT NOT NULL,
    CONSTRAINT pk_location_id PRIMARY KEY location_id
);

CREATE TABLE IF NOT EXISTS events (
    event_id BIGINT GENERATE BY DEFAULT AS IDENTITY NOT NULL,
    user_id BIGINT NOT NULL,
    annotation VARCHAR(120) NOT NULL,
    category_id BIGINT NOT NULL,
    created_on TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    description VARCHAR(400) NOT NULL,
    event_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    location_id BIGINT NOT NULL,
    paid BOOLEAN NOT NULL,
    participant_limit INT NOT NULL,
    published_on TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    request_moderation BOOLEAN NOT NULL,
    state VARCHAR(120) NOT NULL,
    title VARCHAR(120) NOT NULL,
    CONSTRAINT pk_events PRIMARY KEY event_id,
    CONSTRAINT fk_users FOREIGN KEY user_id REFERENCES users(user_id),
    CONSTRAINT fk_categories FOREIGN KEY category_id REFERENCES categories(category_id),
    CONSTRAINT fk_locations FOREIGN KEY location_id REFERENCES locations(location_id)
);

CREATE TABLE IF NOT EXISTS compilations (
    compilation_id BIGINT GENERATE BY DEFAULT AS IDENTITY NOT NULL,
    pinned BOOLEAN NOT NULL,
    title VARCHAR(50) NOT NULL,
    CONSTRAINT pk_compilation_id PRIMARY KEY compilation_id
);

CREATE TABLE IF NOT EXISTS requests (
    request_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    event_id NOT NULL,
    user_id NOT NULL,
    status VARCHAR(40) NOT NULL,
    CONSTRAINT pk_request_id PRIMARY KEY request_id,
    CONSTRAINT fk_event_id FOREIGN KEY event_id REFERENCES events(event_id),
    CONSTRAINT fk_user_id FOREIGN KEY user_id REFERENCES users(user_id),
    CONSTRAINT unique_request UNIQUE(user_id, event_id)
);

CREATE TABLE IF NOT EXISTS compilation_events (
    compilation_id BIGINT NOT NULL,
    event_id BIGINT NOT NULL,
    CONSTRAINT fk_compilation_events_event FOREIGN KEY (event_id) REFERENCES events(event_id),
    CONSTRAINT fk_compilation_events_compilation FOREIGN KEY (compilation_id) REFERENCES compilations(compilation_id)
);